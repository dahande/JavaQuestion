<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Java トリック問題集</title>
    <link rel="stylesheet" href="styles.css">
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f0f0;
            color: #333;
            margin: 0;
            padding: 20px;
        }
        .container {
            max-width: 800px;
            margin: 50px auto;
            background-color: #fff;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        h1, h2 {
            color: #4CAF50;
        }
        pre {
            background-color: #f5f5f5;
            padding: 10px;
            border-radius: 5px;
            overflow-x: auto;
        }
        .back-button {
            background-color: #4CAF50;
            color: white;
            border: none;
            padding: 10px 20px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            margin: 10px 0;
            cursor: pointer;
            border-radius: 5px;
        }
        .back-button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Java トリック問題集</h1>

        <section>
            <h2>問題1</h2>
            <pre><code>
package mypack;
public class Main{
    public static void main(String[] args) {
        System.out.print(test(null));
    }
    private static String test(Object obj) {
        try {
            System.out.println(obj.toString());
        }catch(NullPointerException e) {
            return "A";
        }finally {
            System.out.println("B");
        }
        return "C";
    }
}
            </code></pre>
            <p><strong>解説:</strong> メソッド<code>test</code>が<code>null</code>を引数として呼び出されると、<code>obj.toString()</code>で<code>NullPointerException</code>がスローされます。この例外は<code>catch</code>ブロックで捕捉され、「A」が返されますが、その前に<code>finally</code>ブロックが実行され「B」が表示されます。結果として、「B」が表示され、その後「A」が表示されます。</p>
        </section>

        <section>
            <h2>問題2</h2>
            <pre><code>
package mypack;
public class Main{
    public static void main(String[] args) {
        int result = sample();
        System.out.println(result);
    }
    private static int sample() {
        int val = 0;
        try {
            String[] array = {"A","B","C"};
            System.out.println(array[3]);
        }catch(RuntimeException e) {
            val = 10;
            return val;
        }finally{
            val  += 10;
        }
        return val;
    }
}
            </code></pre>
            <p><strong>解説:</strong> <code>array[3]</code>にアクセスしようとすると<code>ArrayIndexOutOfBoundsException</code>がスローされます。<code>catch</code>ブロックで<code>val</code>が10に設定され、それが返されます。しかし、<code>finally</code>ブロックで<code>val</code>がさらに10加算されるため、最終的に20が返されます。</p>
        </section>

        <!-- さらに8つの問題をここに追加します -->
        
        <section>
            <h2>問題3</h2>
            <pre><code>
// 次のコードはどうなりますか？
public class Main {
    public static void main(String[] args) {
        try {
            System.out.println("A");
            throw new RuntimeException();
        } catch (Exception e) {
            System.out.println("B");
        } finally {
            System.out.println("C");
        }
        System.out.println("D");
    }
}
            </code></pre>
            <p><strong>解説:</strong> 「A」が表示され、その後<code>RuntimeException</code>がスローされます。<code>catch</code>ブロックで「B」が表示され、<code>finally</code>ブロックで「C」が表示されます。最後に「D」が表示されます。結果として、「A B C D」と表示されます。</p>
        </section>

        <section>
            <h2>問題4</h2>
            <pre><code>
// 次のコードはどうなりますか？
public class Main {
    public static void main(String[] args) {
        String str = null;
        try {
            str.length();
            System.out.println("A");
        } catch (NullPointerException e) {
            System.out.println("B");
        } finally {
            System.out.println("C");
        }
        System.out.println("D");
    }
}
            </code></pre>
            <p><strong>解説:</strong> <code>str.length()</code>で<code>NullPointerException</code>がスローされ、<code>catch</code>ブロックで「B」が表示されます。<code>finally</code>ブロックで「C」が表示され、最後に「D」が表示されます。結果として、「B C D」と表示されます。</p>
        </section>

        <section>
            <h2>問題5</h2>
            <pre><code>
// 次のコードはどうなりますか？
public class Main {
    public static void main(String[] args) {
        try {
            int[] array = new int[-1];
        } catch (NegativeArraySizeException e) {
            System.out.println("A");
        } finally {
            System.out.println("B");
        }
        System.out.println("C");
    }
}
            </code></pre>
            <p><strong>解説:</strong> <code>new int[-1]</code>で<code>NegativeArraySizeException</code>がスローされます。<code>catch</code>ブロックで「A」が表示され、<code>finally</code>ブロックで「B」が表示されます。最後に「C」が表示されます。結果として、「A B C」と表示されます。</p>
        </section>

        <section>
            <h2>問題6</h2>
            <pre><code>
// 次のコードはどうなりますか？
public class Main {
    public static void main(String[] args) {
        String str = "abc";
        try {
            System.out.println(str.charAt(3));
        } catch (StringIndexOutOfBoundsException e) {
            System.out.println("A");
        } finally {
            System.out.println("B");
        }
        System.out.println("C");
    }
}
            </code></pre>
            <p><strong>解説:</strong> <code>str.charAt(3)</code>で<code>StringIndexOutOfBoundsException</code>がスローされ、<code>catch</code>ブロックで「A」が表示されます。<code>finally</code>ブロックで「B」が表示され、最後に「C」が表示されます。結果として、「A B C」と表示されます。</p>
        </section>

        <section>
            <h2>問題7</h2>
            <pre><code>
// 次のコードはどうなりますか？
public class Main {
    public static void main(String[] args) {
        int[] array = new int[3];
        try {
            System.out.println(array[3]);
        } catch (ArrayIndexOutOfBoundsException e) {
            System.out.println("A");
        } finally {
            System.out.println("B");
        }
        System.out.println("C");
    }
}
            </code></pre>
            <p><strong>解説:</strong> <code>array[3]</code>で<code>ArrayIndexOutOfBoundsException</code>がスローされ、<code>catch</code>ブロックで「A」が表示されます。<code>finally</code>ブロックで「B」が表示され、最後に「C」が表示されます。結果として、「A B C」と表示されます。</p>
        </section>

        <section>
            <h2>問題8</h2>
            <pre><code>
// 次のコードはどうなりますか？
public class Main {
    public static void main(String[] args) {
        int result = divide(10, 0);
        System.out.println(result);
    }
    private static int divide(int a, int b) {
        try {
            return a / b;
        } catch (ArithmeticException e) {
            System.out.println("A");
            return 0;
        } finally {
            System.out.println("B");
        }
    }
}
            </code></pre>
            <p><strong>解説:</strong> <code>divide(10, 0)</code>で<code>ArithmeticException</code>がスローされ、<code>catch</code>ブロックで「A」が表示されます。<code>finally</code>ブロックで「B」が表示され、最後に結果として0が表示されます。結果として、「A B 0」と表示されます。</p>
        </section>

        <section>
            <h2>問題9</h2>
            <pre><code>
// 次のコードはどうなりますか？
public class Main {
    public static void main(String[] args) {
        try {
            String str = "Java";
            str = null;
            str.length();
        } catch (NullPointerException e) {
            System.out.println("A");
        } finally {
            System.out.println("B");
        }
        System.out.println("C");
    }
}
            </code></pre>
            <p><strong>解説:</strong> <code>str</code>が<code>null</code>に設定され、その後<code>str.length()</code>を呼び出すと<code>NullPointerException</code>がスローされます。<code>catch</code>ブロックで「A」が表示され、<code>finally</code>ブロックで「B」が表示されます。最後に「C」が表示されます。結果として、「A B C」と表示されます。</p>
        </section>

        <section>
            <h2>問題10</h2>
            <pre><code>
// 次のコードはどうなりますか？
public class Main {
    public static void main(String[] args) {
        try {
            throw new IllegalArgumentException();
        } catch (IllegalArgumentException e) {
            System.out.println("A");
        } finally {
            try {
                throw new Exception();
            } catch (Exception e) {
                System.out.println("B");
            }
        }
        System.out.println("C");
    }
}
            </code></pre>
            <p><strong>解説:</strong> <code>IllegalArgumentException</code>がスローされ、<code>catch</code>ブロックで「A」が表示されます。<code>finally</code>ブロック内の<code>try-catch</code>で新たな<code>Exception</code>がスローされ、「B」が表示されます。最後に「C」が表示されます。結果として、「A B C」と表示されます。</p>
        </section>

        <div class="navigation">
            <button class="back-button" onclick="window.location.href='../index.html'">ホームに戻る</button>
        </div>
    </div>
</body>
</html>

